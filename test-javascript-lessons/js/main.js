
//*********************************************************************
// Сравниваем этот внутренний main.js  файл с нашим соббсвенным jQueyr "ourjQuery.js"
//********************************************************************

window.onload = function(е) {
    var inputs = document.querySelectorAll('.check');

    document.querySelector('form').onsubmit = function(e) {
    	var error = false;

    	for(var i = 0; i < inputs.length; i++){
    		if(inputs[i].value === ''){
    			inputs[i].classList.add('err');
    			error = true;
    		}
    	}
    	if(error) {
    		e.preventDefault();
    	}
    }



  

//****************************************************************************************
// В итоге обьяснение как из одного кода идет трансформация в другой код , 
// то есть применяет цепочка в jQuery 
//****************************************************************************************
//****************************************************************************************    
//КОД С ЦЕПОЧКОЙ, который трансформирован с использованием цепочки 
//**************************************************************************************** 
//var jqInputs = $('.check');    
//
//jqInputs.on('click', function(){                                                         
//    this.classList.remove('err');
//}).on('focus', function(){     
//   this.classList.add('focus');
//}).on('blur', function(){     
//   this.classList.remove('focus');
// });


//****************************************************************************************    
//КОД БЕЗ ЦЕПОЧКИ
//****************************************************************************************     
 var jqInputs = $('.check');   

  jqInputs.on('click', function(){ 
                                   
                                 
   this.classList.remove('err');
 });

jqInputs.on('focus', function(){     
 this.classList.add('focus');
});
 

jqInputs.on('blur', function(){     
  this.classList.remove('focus');
  });

 

   
jqInputs.addClass('some').addClass('some1').addClass('some2');  // Это и есть цепочка. Каждая такая функция .addClass('some')  .addClass('some1') .addClass('some2')
                                                                // Возвращает ровно такой же обьект , над которым работала , то есть  jqInputs 

//*************************************************************************************************    
//Подход цепочки дает реальную выгоду , в следующем примере . ПРИМЕР ЦЕПОЧКИ №1
//************************************************************************************************** 
// ПРИМЕР ЦЕПОЧКИ №1 
//************************************************************************************************** 
$('.items .item').html('1').addClass('nz').on('click', function(){  //Подход цепочки дает реальную выгоду, например когда с элментами нужно сделать несколько действий 
                                                                    //Дивам .items .item устанавливем html равный 1, добавляем класс nz дивам  .items .item, 
                                                                    //И еще под подвешивамем событие click для дивов .items .item , при котором меняться будет цвет на red 
                                                                    //Подобный синтаксис в 3 строчки кода может сделать много действий для элементов ( на примере дивам  .items .item )
                                                                    //Это идея цепочек 
  this.style.color = 'red';
}); 

//****************************************************************************************    
//ПРИМЕР РАЗНЫЕ ПЕРЕМЕННЫЕ №1 . Связующая цепочка из файла ourjQuery.js , которая прописана в коде if(typeof(html) === "undefined"){return this.elements[0].innerHTML;} из файла ourjQuery.js
//**************************************************************************************** 
   console.log($('.items .item').html()); // Можно вызвать функцию html() , ничего туда не передав. В скобочках пусто 
                                          // И тогда console.log вернет там html код данного элемента .items .item
                                          // То есть мы вывели .items .item html элементы , которые были прописаны ранее 
                                          // в строке 76 в коде $('.items .item').html('1').addClass('nz').on('click', function(){...}
                                          // и было в коносли выведено 1 

}